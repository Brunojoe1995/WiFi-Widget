plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'com.google.dagger.hilt.android'
    id 'kotlin-kapt'
}

android {
    def PACKAGE_NAME = 'com.w2sv.wifiwidget'

    namespace PACKAGE_NAME
    compileSdk libs.versions.compileSdk.get().toInteger()

    defaultConfig {
        applicationId PACKAGE_NAME
        minSdk libs.versions.minSdk.get().toInteger()
        targetSdk libs.versions.compileSdk.get().toInteger()

        versionCode 3
        versionName '1.0.2'

        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
    }
    signingConfigs {
        // create release signingConfig from keystore.properties file, if present
        release {
            rootProject.file("keystore.properties").with { file ->
                if (file.exists()) {
                    def keystoreProperties = new Properties()
                    keystoreProperties.load(new FileInputStream(file))

                    storeFile rootProject.file("keys.jks")
                    storePassword keystoreProperties["storePassword"]
                    keyAlias keystoreProperties["keyAlias"]
                    keyPassword keystoreProperties["keyPassword"]
                } else
                    println("WARNING: Failed to create release signing configuration; $file.path not present")
            }
        }
    }
    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile("proguard-android-optimize.txt"), "proguard-rules.pro"
            signingConfig signingConfigs.release
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion libs.versions.compose.compiler.get()
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

dependencies {
    implementation fileTree(include: ['*.jar', '*.aar'], dir: 'libs')

    implementation libs.kotlin.stdlib
    // androidx
    implementation libs.androidx.core
    implementation libs.androidx.appcompat
    implementation libs.androidx.lifecycle.runtime
    implementation libs.androidx.splashscreen
    implementation 'androidx.localbroadcastmanager:localbroadcastmanager:1.1.0'

    // .compose
    implementation libs.androidx.compose.activity
    implementation libs.androidx.compose.viewmodel
    implementation platform('androidx.compose:compose-bom:2023.01.00')
    implementation "androidx.compose.ui:ui"
    implementation "androidx.compose.ui:ui-tooling-preview"
    implementation 'androidx.compose.material3:material3'
    debugImplementation "androidx.compose.ui:ui-tooling"

    // hilt
    implementation libs.google.hilt
    kapt libs.google.hilt.kapt

    // other
    implementation libs.typedpreferences
//    implementation libs.androidutils
    implementation libs.slimber
}